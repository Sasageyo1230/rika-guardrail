name: Rika Self-Build

on:
  issues:
    types: [opened, edited, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  apply-plan:
    if: contains(join(github.event.issue.labels.*.name), 'rika:build')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Parse plan and commit changes
        id: plan
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || '';
            const m = body.match(/```rika-plan\s*([\s\S]*?)```/);
            if (!m) core.setFailed('No ```rika-plan``` block found in issue body.');
            const plan = JSON.parse(m[1]);

            const { execSync } = require('node:child_process');
            const fs = require('node:fs');
            const path = require('node:path');

            const branch = `rika/${Date.now()}`;
            execSync(`git checkout -b ${branch}`, { stdio: 'inherit' });

            for (const f of plan.files || []) {
              const p = path.join(process.cwd(), f.path);
              fs.mkdirSync(path.dirname(p), { recursive: true });
              fs.writeFileSync(p, f.content, 'utf8');
            }

            execSync('git config user.name "rika-bot"', { stdio: 'inherit' });
            execSync('git config user.email "rika-bot@users.noreply.github.com"', { stdio: 'inherit' });
            execSync('git add -A', { stdio: 'inherit' });
            execSync(`git commit -m "${plan.message || 'Rika self-build'}"`, { stdio: 'inherit' });
            execSync(`git push origin ${branch}`, { stdio: 'inherit' });

            core.setOutput('branch', branch);

      - name: Open PR
        uses: actions/github-script@v7
        env:
          BRANCH: ${{ steps.plan.outputs.branch }}
        with:
          script: |
            const branch = process.env.BRANCH;
            const title = context.payload.issue.title.replace('[Rika Build]', '[PR]');
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: branch,
              base: 'main',
              title,
              body: 'Automated by Rika self-build. Awaiting review.'
            });
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Opened PR #${pr.number} from branch \`${branch}\`.`
            });
